name: CollaborativePY Actions

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9.16]
        database-name:
          - collaborativepy
        database-password:
          - collaborativepy_pwd
        database-user:
          - collaborativepy_user
        database-host:
          - localhost
        database-port:
          - 5432
        database-engine:
          - django.db.backends.postgresql
        django-debug:
          - true

    services:
      postgres: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
        image: postgres
        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3.3.0
    - name: Cache dependency # caching dependency will make our build faster.
        - uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

    - name: Setup python environment # setting python environment to 3.x
        - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
    - name: Check Python version # checking the python version to see if 3.x is installed.
        - run: python --version